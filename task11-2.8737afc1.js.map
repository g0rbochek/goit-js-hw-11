{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EAOAC,EAAAC,KAAKC,OAAOC,iBAAiB,U,SAgBAC,G,OAAdC,EAAaC,MAAAC,KAAAC,U,IAd5B,IASIC,EACAC,EAEAC,EAZAC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MAOVC,EAAW,IAAIC,sBAkDrB,SAAyBC,GACvBA,EAAQC,S,EAAQN,EAAAf,EAAA,CAAAe,EAAAO,GAAAC,MAAA,SAAAC,EAAMC,G,IAQVC,EAEIC,E,sEALVF,EAAMG,eAAc,C,uBACtBf,GAAQ,E,mBAEiB,EAAAgB,EAAAC,UAASnB,EAxDhB,GAwD+CE,G,OAAzDa,EAAQK,EAAAC,KAEZL,EACED,EADFO,KAAQN,KAGVzB,EAAAC,KAAK+B,UAAUC,mBAAmB,aAAa,EAAAC,EAAAC,cAAaV,IAC5Db,EAASwB,UAGPZ,EAASa,OAAOC,OAAOC,MACvBf,EAASO,KAAKS,UAAYhB,EAASa,OAAOC,OAAOG,WAEjDzB,EAAS0B,UAAU1C,EAAAC,KAAK0C,OACxB9B,EAAA+B,GAASC,OAAOC,KACd,+D,kDAIJ9C,EAAAC,KAAK8C,YAAYC,UAAUC,IAAI,mBAC/BpC,EAAA+B,GAASC,OAAOC,KACd,8D,mEA5BcvB,G,kCAAP,I,IAvDJ,CACX2B,WAAY,U,SASC7C,I,OAAAA,EAAfQ,EAAAf,EAAA,CAAAe,EAAAO,GAAAC,MAAA,SAAAC,EAA6BlB,G,IAYnBoB,EAWIC,E,qEAtBZ0B,OAAOC,SAAS,EAAG,GACnBhD,EAAEiD,iBAGiB,MAFnB3C,EAAaN,EAAEkD,OAAOC,YAAYC,QAEa,KAAtB9C,EAAW+C,OAAa,C,sBAC/CzD,EAAAC,KAAK+B,UAAU0B,UAAY,GAC3B7C,EAAA+B,GAASC,OAAOC,KAAK,yC,qDAKE,EAAAnB,EAAAC,UAASlB,EAfZ,I,WAgBc,KAD5Bc,EAAQK,EAAAC,MACDC,KAAKN,KAAKkC,OAAY,C,uBACjC3D,EAAAC,KAAK+B,UAAU0B,UAAY,GAE3B7C,EAAA+B,GAASC,OAAOC,KACd,4E,2BAMFrB,EACED,EADFO,KAAQN,KAGVzB,EAAAC,KAAK+B,UAAU0B,WAAY,EAAAxB,EAAAC,cAAaV,GACxCd,EAAO,EACPC,EAASwB,UACTvB,EAAA+B,GAASC,OAAOe,QACd,oBAA4CC,OAAxBrC,EAASO,KAAKS,UAAU,aAE1ChB,EAASO,KAAKS,WAnCE,IAoClBxB,EAAS8C,QAAQ9D,EAAAC,KAAK0C,OAExBlC,EAAaC,E,kDAEbqD,QAAQC,IAAGnC,EAAAoC,IACXpD,EAAA+B,GAASC,OAAOqB,QAAQ,oC,2DAtCA5D,MAAAC,KAAAC,U","sources":["src/js/infinity-scroll.js"],"sourcesContent":["import { getFetch } from './api-img';\nimport { createMarkup } from './markUp';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nrefs.formEl.addEventListener('submit', handlerSubmit);\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionDelay: 250,\n});\n\nlet option = {\n  rootMargin: '300px',\n};\n\nconst observer = new IntersectionObserver(handlerLoadMore, option);\nlet queryValue;\nlet inputValue;\nlet totalNumberOfPges = 20;\nlet page;\n\nasync function handlerSubmit(e) {\n  window.scrollTo(0, 0);\n  e.preventDefault();\n  inputValue = e.target.searchQuery.value;\n\n  if (inputValue === '' || inputValue.trim() === '') {\n    refs.galleryEl.innerHTML = '';\n    Notiflix.Notify.info('Your query is empty. Please try again');\n    return;\n  }\n\n  try {\n    const response = await getFetch(inputValue, totalNumberOfPges);\n    if (response.data.hits.length === 0) {\n      refs.galleryEl.innerHTML = '';\n\n      Notiflix.Notify.info(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    const {\n      data: { hits },\n    } = response;\n\n    refs.galleryEl.innerHTML = createMarkup(hits);\n    page = 1;\n    lightbox.refresh();\n    Notiflix.Notify.success(\n      `Hooray! We found ${response.data.totalHits} images.`\n    );\n    if (response.data.totalHits >= totalNumberOfPges) {\n      observer.observe(refs.guard);\n    }\n    queryValue = inputValue;\n  } catch (error) {\n    console.log(error);\n    Notiflix.Notify.failure('ERROR!!! Something went wrong!!!');\n  }\n\n  // console.log(refs.guard);\n}\n\nfunction handlerLoadMore(entries) {\n  entries.forEach(async entry => {\n    //   console.log(entry);\n    //   console.log(page);\n    //   console.log(totalNumberOfPges);\n    //   console.log(queryValue);\n    if (entry.isIntersecting) {\n      page += 1;\n      try {\n        const response = await getFetch(queryValue, totalNumberOfPges, page);\n        const {\n          data: { hits },\n        } = response;\n\n        refs.galleryEl.insertAdjacentHTML('beforeend', createMarkup(hits));\n        lightbox.refresh();\n\n        if (\n          response.config.params.page >=\n          response.data.totalHits / response.config.params.per_page\n        ) {\n          observer.unobserve(refs.guard);\n          Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      } catch (error) {\n        refs.btnLoadMore.classList.add('visually-hidden');\n        Notiflix.Notify.info(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n    }\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$4Nugj","refs","formEl","addEventListener","e","$3009c398e1a659a2$var$_handlerSubmit","apply","this","arguments","$3009c398e1a659a2$var$queryValue","$3009c398e1a659a2$var$inputValue","$3009c398e1a659a2$var$page","$3009c398e1a659a2$var$lightbox","$parcel$interopDefault","$5IjG7","captionDelay","$3009c398e1a659a2$var$observer","IntersectionObserver","entries","forEach","$2TvXO","mark","_callee","entry","response","hits","isIntersecting","$1kVTm","getFetch","_ctx","sent","data","galleryEl","insertAdjacentHTML","$8f3h1","createMarkup","refresh","config","params","page","totalHits","per_page","unobserve","guard","$6JpON","Notify","info","btnLoadMore","classList","add","rootMargin","window","scrollTo","preventDefault","target","searchQuery","value","trim","innerHTML","length","success","concat","observe","console","log","t0","failure"],"version":3,"file":"task11-2.8737afc1.js.map"}